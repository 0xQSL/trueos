/*

Our default Jenkins pipeline we use to create our on-commit
snapshot builds of trueos-master branch.

*/

pipeline {
  agent { label 'TrueOS-Snapshot' }

  environment {
    GH_ORG = 'trueos'
    GH_REPO = 'trueos'
    SRCROOT = '/usr/trueos-src'
    POUDRIERE_BASE = 'trueos-snap-base'
    POUDRIERE_PORTS = 'trueos-snap-ports'
    TRUEOS_MANIFEST='${WORKSPACE}/release/manifests/trueos-snapshot.json'
    WITH_XTRA_PKGS = 'YES'
    TRUEOS_VERSION = '12.0'
  }

  stages {

    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Nullfs') {
      steps {
        sh 'mkdir -p ${SRCROOT} || true'
        sh 'mount_nullfs ${WORKSPACE} ${SRCROOT}'
      }
    }

    stage('Pre-Clean') {
      steps {
        sh 'rm -rf /usr/obj${SRCROOT} || true'
        sh 'chflags -R noschg /usr/obj${SRCROOT} || true'
        sh 'rm -rf /usr/obj${SRCROOT} || true'
      }
    }
    stage('World') {
      steps {
        sh 'cd ${SRCROOT} && make -j $(sysctl -n hw.ncpu) buildworld'
      }
    }
    stage('Kernel') {
      steps {
        sh 'cd ${SRCROOT} && make -j $(sysctl -n hw.ncpu) buildkernel'
      }
    }
    stage('Base Packages') {
      environment {
           PKGSIGNKEY = credentials('a50f9ddd-1460-4951-a304-ddbf6f2f7990')
      }
      steps {
        sh 'rm -rf /usr/obj${SRCROOT}/amd64.amd64/repo'
        sh 'cd ${SRCROOT} && make -j 4 packages'
      }
    }
    stage('Release') {
      post {
        success {
          archiveArtifacts artifacts: 'artifacts/**', fingerprint: true
        }
      }
      steps {
        sh 'rm -rf ${WORKSPACE}/artifacts'
        sh 'cd ${SRCROOT}/release && make iso'
        sh 'mkdir -p ${WORKSPACE}/artifacts/repo'
        sh 'cp /usr/obj${SRCROOT}/amd64.amd64/release/*.iso ${WORKSPACE}/artifacts'
      }
    }

    stage('Publish') {
      steps {
        sshagent (credentials: ['syncbot-credentials']) {
          sh 'ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null syncbot@pkg.trueos.org mkdir -p /data/pkg/snapshot/FreeBSD:12:amd64/latest || true'
          sh 'rsync -av --delete-after --delay-updates -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" /usr/obj${SRCROOT}/pkgset/ syncbot@pkg.trueos.org:/data/pkg/snapshot/FreeBSD:12:amd64/latest'
          sh 'ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null syncbot@pkg.trueos.org mkdir -p /data/iso/snapshot/ || true'
          sh 'rsync -av --delete-after --delay-updates -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" ${WORKSPACE}/artifacts/ syncbot@pkg.trueos.org:/data/iso/snapshot/'
        }
      }
    }
  }
  post {
    success {
      script {
        cleanWs notFailBuild: true
      }
    }
    always {
      sh 'rm -rf /usr/obj${SRCROOT} || true'
      sh 'chflags -R noschg /usr/obj${SRCROOT} || true'
      sh 'rm -rf /usr/obj${SRCROOT} || true'
      sh 'umount -f ${SRCROOT} || true'
    }
  }
}
